"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[1204],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,f=d["".concat(s,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4678:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),l=["components"],a={id:"get-model-with-string",title:"getModelWithString"},s=void 0,c={unversionedId:"api/functions/get-model-with-string",id:"api/functions/get-model-with-string",title:"getModelWithString",description:"getModelWithString(key) retrieves a model with the given key. If no Mongoose model exists in Typegoose's internal cache, it will return undefined.",source:"@site/../docs/api/functions/getModelWithString.md",sourceDirName:"api/functions",slug:"/api/functions/get-model-with-string",permalink:"/typegoose/docs/api/functions/get-model-with-string",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/api/functions/getModelWithString.md",tags:[],version:"current",frontMatter:{id:"get-model-with-string",title:"getModelWithString"},sidebar:"docs",previous:{title:"setGlobalOptions",permalink:"/typegoose/docs/api/functions/set-global-options"},next:{title:"getName",permalink:"/typegoose/docs/api/functions/get-name"}},u={},p=[{value:"Example",id:"example",level:2}],d={toc:p};function g(e){var t=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"getModelWithString(key)")," retrieves a model with the given key. If no Mongoose model exists in Typegoose's internal cache, it will return ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'class Kitten {\n  @prop()\n  public name?: string;\n}\n\nconst KittenModel = getModelForClass(Kitten);\n\nconst KittenModelNew = getModelWithString(KittenModel.modelName);\n// OR with the internal utils.getName(class)\nconst KittenModelNew = getModelWithString(utils.getName(Kitten));\n// BUT when you have the class at your disposal, you should use "getModelForClass" - it will return the already compiled model\n')))}g.isMDXComponent=!0}}]);